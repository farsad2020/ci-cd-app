name: Deploy App

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io  # یا docker.io
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ secrets.APP_NAME }}
      APP_ENV: ${{ secrets.APP_ENV }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set App Directory
        run: echo "APP_PATH=${APP_NAME}_app" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Create .env file in app folder
        run: |
          echo "Creating .env for $APP_NAME..."
          echo "APP_NAME=${APP_NAME}" >> ${{APP_NAME}}-app/.env
          echo "DB_NAME=${{ vars.DB_NAME }}" >> ${{APP_NAME}}-app/.env
          echo "DB_USER=${{ vars.DB_USER }}" >> ${{APP_NAME}}-app/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ${{APP_NAME}}-app/.env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> ${{APP_NAME}}-app/.env

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-backend:${{ env.IMAGE_TAG }} $APP_PATH/backend
          docker push ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-backend:${{ env.IMAGE_TAG }}

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-frontend:${{ env.IMAGE_TAG }} $APP_PATH/frontend
          docker push ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-frontend:${{ env.IMAGE_TAG }}

      - name: Deploy to Dev via Docker Compose
        if: env.APP_ENV == 'dev'
        run: |
          cd $APP_PATH
          docker compose --env-file .env up -d --build

      - name: Setup Kubeconfig
        if: env.APP_ENV != 'dev'
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: Deploy to Kubernetes via Helm
        if: env.APP_ENV != 'dev'
        run: |
          helm upgrade --install $APP_NAME $APP_PATH/helm \
            --set image.backend.repository=${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-backend \
            --set image.backend.tag=${{ env.IMAGE_TAG }} \
            --set image.frontend.repository=${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}-frontend \
            --set image.frontend.tag=${{ env.IMAGE_TAG }} \
            --namespace $APP_NAME --create-namespace
